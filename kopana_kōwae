#!/usr/bin/python3
# Splits a textfile of newspapers' pages (output by hiki_niupepa_kupu) into its composing paragraphs and saves it

import csv
import argparse
from taumahi import *
from tuaki_niupepa_hou import *

tīmata_kōwae = None


class Rārangi:
    def __init__(self, rārangi):
        # Assigns the elements of each row to an appropriately named attribute of the object, with the word counts and percentages to be updated
        self.tāima = rārangi[0]
        self.niupepa = rārangi[1]
        self.perehitanga = rārangi[2]
        self.tau = rārangi[3]
        self.māori = 0
        self.rangirua = 0
        self.pākehā = 0
        self.tapeke = 0
        self.ōrau = 0.00
        self.kupu = rārangi[11]
        self.taukaea = rārangi[10]


def kopana_kōwae(perehitanga_kōnae_ingoa, perehitanga_kōnae_ingoa_hou):
    global tīmata_kōwae

    with open(perehitanga_kōnae_ingoa, 'r') as kōnae:
        kōnae_tūtira = list(csv.reader(kōnae))
        kōnae.close()

    with open(perehitanga_kōnae_ingoa_hou, 'w') as kōnae:
        kaituhituhi = csv.writer(kōnae)
        kaituhituhi.writerow(['date_retrieved', 'newspaper', 'issue', 'page', 'māori_words',
                              'ambiguous_word', 'other_words', 'total_words', 'percent_māori', 'raw_text', 'url'])
        # Deletes the first row as it is just the old variable names
        del kōnae_tūtira[0]
        # Loops through the rest of the issues in the list
        for i in range(len(kōnae_tūtira)):
            # Variable to determine whether a page is the last page of the issue
            # By determining whether it is the last in the list, or whether the
            # Newspaper and issue name is the same as the succeeding row.

            if kōnae_tūtira[i] == kōnae_tūtira[-1]:
                mātāmuri_whārangi = True
            elif kōnae_tūtira[i][1:3] != kōnae_tūtira[i + 1][1:3]:
                mātāmuri_whārangi = True
            else:
                mātāmuri_whārangi = False

            # Creates a class object of each page it loops through
            rārangi = Rārangi(kōnae_tūtira[i])

            # Splits the page of each text into paragraphs
            kupu_tūtira = re.findall(
                r'[\w\W]*?[.!?)][‘’\'\" ]*\n|[\w\W]+$', rārangi.kupu)
            if len(kupu_tūtira) == 0:
                kupu_tūtira += [rārangi.kupu]

            # Loops through each paragraph
            for kupu in kupu_tūtira:
                # Updates the class object's text to be written
                rārangi.kupu = kupu

                if tīmata_kōwae and not kupu.isupper():  # If there is leftover text from the previous page,
                    # Find the first paragraph that isn't in caps, i.e. isn't a title
                    # Add the leftover text to the first paragraph that isn't entirely uppercase
                    rārangi.kupu = tīmata_kōwae.kupu + kupu.strip()
                    whārangi_tau = tīmata_kōwae.tau
                    whārangi_taukaea = tīmata_kōwae.taukaea
                    tīmata_kōwae = None
                else:
                    # Set the current page number and url to the variables that will be written to the new file
                    whārangi_tau = rārangi.tau
                    whārangi_taukaea = rārangi.taukaea

                # Replaces all white space with a space
                rārangi.kupu = clean_whitespace(rārangi.kupu)
                # Gets the percentage of the text that is Māori
                rārangi.māori, rārangi.rangirua, rārangi.pākehā, rārangi.tapeke, rārangi.ōrau = tiki_ōrau(
                    rārangi.kupu)

                mahuru_kupu = rārangi.kupu.strip().strip(tohukī)
                if mahuru_kupu:
                    if (kupu == kupu_tūtira[-1]) and (mahuru_kupu[-1] not in tohutuhi) and not mātāmuri_whārangi:
                        tīmata_kōwae = rārangi
                        break

                # Prepares the row that is to be written to the csv
                kōnae_rārangi = [rārangi.tāima, rārangi.niupepa, rārangi.perehitanga, whārangi_tau,
                                 rārangi.māori, rārangi.rangirua, rārangi.pākehā, rārangi.tapeke, rārangi.ōrau, rārangi.kupu, whārangi_taukaea]
                print(kōnae_rārangi[1:4])
                # Writes the date retrieved, newspaper name, issue name, page number, Māori percentage, extracted text and page url to the file
                kaituhituhi.writerow(kōnae_rārangi)

        kōnae.close()


def matua():
    whakatukai = argparse.ArgumentParser()
    whakatukai.add_argument(
        '--input', '-i', help="Input csv file to be sorted")
    whakatukai.add_argument(
        '--output', '-o', help="Output text file where sorted input file is to be stored")
    whakatukai.add_argument(
        '--rewrite', '-r', help="Input file to be sorted and saved under the same name")
    kōwhiri = whakatukai.parse_args()

    if kōwhiri.rewrite:
        perehitanga_kōnae_ingoa = perehitanga_kōnae_ingoa_hou = kōwhiri.rewrite

    else:
        perehitanga_kōnae_ingoa = kōwhiri.input if kōwhiri.input else 'perehitanga_kuputohu.csv'
        perehitanga_kōnae_ingoa_hou = kōwhiri.output if kōwhiri.output else 'perehitanga_kuputohu_split.csv'

    kopana_kōwae(perehitanga_kōnae_ingoa, perehitanga_kōnae_ingoa_hou)


if __name__ == '__main__':
    matua()
